on: [push, pull_request]

jobs:
  splitByBuildTypesTrue:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: macos-10.15, name: "APPLE_CLANG", version: "10.3",   versionForConan: "10.0", buildType: "Debug"   }
          - { os: macos-10.15, name: "APPLE_CLANG", version: "10.3",   versionForConan: "10.0", buildType: "Release" }
          - { os: macos-11,    name: "APPLE_CLANG", version: "11.7",   versionForConan: "11.0", buildType: "Debug"   }
          - { os: macos-11,    name: "APPLE_CLANG", version: "11.7",   versionForConan: "11.0", buildType: "Release" }
          - { os: macos-11,    name: "APPLE_CLANG", version: "12.5.1", versionForConan: "12.0", buildType: "Debug"   }
          - { os: macos-11,    name: "APPLE_CLANG", version: "12.5.1", versionForConan: "12.0", buildType: "Release" }
          - { os: macos-11,    name: "APPLE_CLANG", version: "13.0",   versionForConan: "13.0", buildType: "Debug"   }
          - { os: macos-11,    name: "APPLE_CLANG", version: "13.0",   versionForConan: "13.0", buildType: "Release" }
        arch:
          - { name: "x86_64"}
    name: ${{ matrix.config.name }} ${{ matrix.config.version }} ${{ matrix.config.buildType }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.2'
      - uses: maxim-lobanov/setup-xcode@v1.4.0
        with:
          xcode-version: ${{ matrix.config.version }}
      - name: Install Conan
        run: |
          pip install conan_package_tools
          conan user
      - name: Run
        env:
          CONAN_ARCHS: ${{ matrix.arch.name }}
          CONAN_BUILD_TYPES: ${{ matrix.config.buildType }}
        run: |
          export CONAN_${{ matrix.config.name }}_VERSIONS="${{ matrix.config.versionForConan }}"
          python build.py
